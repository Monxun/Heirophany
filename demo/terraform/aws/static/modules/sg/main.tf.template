# ////////////////////////////////////////////////////
# DEFAULT SG
# ////////////////////////////////////////////////////
resource "aws_security_group" "default" {
  count       = var.sg_flag ? 1 : 0
  name        = "aline_security_group"
  description = "Aline security group"
  vpc_id      = var.sg_vpc_id

  # Allow outbound internet access.
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "aline-security-group"
  }
}


# ////////////////////////////////////////////////////
# IGW SG
# ////////////////////////////////////////////////////
# resource "aws_security_group" "igw_sg" {
#   count       = var.sg_flag && var.alb_flag ? 1 : 0
#   name        = "igw-sg"
#   description = "Internet Gateway security group"

#   tags = {
#     Name = "igw_sg"
#   }
# }

# # RULES
# resource "aws_security_group_rule" "internet_to_igw_http_sg_rule" {
#   count                    = var.sg_flag && var.alb_flag ? 1 : 0
#   type                     = "ingress"
#   description              = "HTTP from Internal ALB"
#   from_port                = 0
#   to_port                  = 0
#   protocol                 = "http"
#   security_group_id        = aws_security_group.igw_sg[0].id
#   # source_security_group_id = aws_security_group.public_alb_sg[0].id
# }
# resource "aws_security_group_rule" "igw_to_public_alb_http_sg_rule" {
#   count                    = var.sg_flag && var.alb_flag ? 1 : 0
#   type                     = "egress"
#   description              = "HTTP from Internal ALB"
#   from_port                = 0
#   to_port                  = 0
#   protocol                 = "http"
#   security_group_id        = aws_security_group.igw_sg[0].id
#   source_security_group_id = aws_security_group.public_alb_sg[0].id
# }


# ////////////////////////////////////////////////////
# PUBLIC ALB SG
# ////////////////////////////////////////////////////
resource "aws_security_group" "public_alb_sg" {
  count       = var.sg_flag && var.alb_flag ? 1 : 0
  name        = "igw-sg"
  description = "Public ALB security group"
  vpc_id      = var.sg_vpc_id

  tags = {
    Name = "public_alb_sg"
  }
}

# RULES
resource "aws_security_group_rule" "public_out" {
  type        = "egress"
  from_port   = 0
  to_port     = 0
  protocol    = "-1"
  cidr_blocks = ["0.0.0.0/0"]
  security_group_id = aws_security_group.public.id
}

 

resource "aws_security_group_rule" "public_in_ssh" {

  type              = "ingress"

  from_port         = 22

  to_port           = 22

  protocol          = "tcp"

  cidr_blocks       = ["0.0.0.0/0"]

  security_group_id = aws_security_group.public.id

}

 

resource "aws_security_group_rule" "public_in_http" {

  type              = "ingress"

  from_port         = 80

  to_port           = 80

  protocol          = "tcp"

  cidr_blocks       = ["0.0.0.0/0"]

  security_group_id = aws_security_group.public.id

}

 

resource "aws_security_group_rule" "public_in_https" {

  type              = "ingress"

  from_port         = 443

  to_port           = 443

  protocol          = "tcp"

  cidr_blocks       = ["0.0.0.0/0"]

  security_group_id = aws_security_group.public.id

}
resource "aws_security_group_rule" "inbound_igw_to_public_alb_http_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type              = "ingress"
  from_port         = 80
  to_port           = 80
  protocol          = "tcp"
  cidr_blocks       = ["0.0.0.0/0"]
  security_group_id        = aws_security_group.public_alb_sg[0].id
}

resource "aws_security_group_rule" "public_alb_to_private_alb_http_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "egress"
  description              = "HTTP from Internal ALB"
  from_port                = 80
  to_port                  = 80
  protocol                 = "http"
  security_group_id        = aws_security_group.igw_sg[0].id
  source_security_group_id = aws_security_group.private_alb_sg[0].id
}


# ////////////////////////////////////////////////////
# PRIVATE RDS SG
# ////////////////////////////////////////////////////
resource "aws_security_group" "rds_sg" {
  count       = var.sg_flag && var.rds_flag ? 1 : 0
  name        = "rds-sg"
  description = "RDS security group"
  vpc_id      = var.sg_vpc_id

  tags = {
    Name = "rds_sg"
  }
}

# RULES
resource "aws_security_group_rule" "private_alb_to_rds_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "ingress"
  description              = "TCP from Private ALB"
  from_port                = 3306
  to_port                  = 3306
  protocol                 = "tcp"
  security_group_id        = aws_security_group.rds_sg[0].id
  source_security_group_id = aws_security_group.private_alb_sg[0].id
}

resource "aws_security_group_rule" "rds_to_private_alb_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "egress"
  description              = "TCP to Private ALB"
  from_port                = 0
  to_port                  = 0
  protocol                 = "-1"
  security_group_id        = aws_security_group.rds_sg[0].id
  source_security_group_id = aws_security_group.private_alb_sg[0].id
}


# ////////////////////////////////////////////////////
# PRIVATE ALB SG
# ////////////////////////////////////////////////////
resource "aws_security_group" "private_alb_sg" {
  count       = var.sg_flag ? 1 : 0
  name        = "private-alb-sg"
  description = "Private Internal ALB security group"
  vpc_id      = var.sg_vpc_id

  tags = {
    Name = "private_alb_sg"
  }
}

# RULES
resource "aws_security_group_rule" "public_alb_to_private_alb_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "ingress"
  description              = "TCP from Public ALB"
  from_port                = 0
  to_port                  = 0
  protocol                 = "tcp"
  security_group_id        = aws_security_group.private_alb_sg[0].id
  source_security_group_id = aws_security_group.public_alb_sg[0].id
}

resource "aws_security_group_rule" "inbound_rds_to_private_alb_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "ingress"
  description              = "TCP from RDS"
  from_port                = 0
  to_port                  = 0
  protocol                 = "tcp"
  security_group_id        = aws_security_group.private_alb_sg[0].id
  source_security_group_id = aws_security_group.public_alb_sg[0].id
}

resource "aws_security_group_rule" "private_alb_to_ec2_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "egress"
  description              = "TCP to EC2"
  from_port                = 0
  to_port                  = 0
  protocol                 = "-1"
  security_group_id        = aws_security_group.private_alb_sg[0].id
  source_security_group_id = aws_security_group.private_ec2_sg[0].id
}

resource "aws_security_group_rule" "outbound_private_alb_to_rds_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "egress"
  description              = "TCP to RDS"
  from_port                = 0
  to_port                  = 0
  protocol                 = "-1"
  security_group_id        = aws_security_group.private_alb_sg[0].id
  source_security_group_id = aws_security_group.rds_sg[0].id
}


# ////////////////////////////////////////////////////
# PRIVATE EC2 SG
# ////////////////////////////////////////////////////
resource "aws_security_group" "private_ec2_sg" {
  count       = var.sg_flag ? 1 : 0
  name        = "private-ec2-sg"
  description = "Private EC2 security group"
  vpc_id      = var.sg_vpc_id

  tags = {
    Name = "private_ec2_sg"
  }
}

# RULES
resource "aws_security_group_rule" "ingress_private_alb_to_ec2_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "ingress"
  description              = "TCP from Private ALB"
  from_port                = 0
  to_port                  = 0
  protocol                 = "tcp"
  security_group_id        = aws_security_group.private_ec2_sg[0].id
  source_security_group_id = aws_security_group.private_alb_sg[0].id
}

resource "aws_security_group_rule" "rds_to_ec2_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "ingress"
  description              = "TCP from Private RDS"
  from_port                = 0
  to_port                  = 0
  protocol                 = "tcp"
  security_group_id        = aws_security_group.private_ec2_sg[0].id
  source_security_group_id = aws_security_group.rds_sg[0].id
}


resource "aws_security_group_rule" "ec2_to_private_alb_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "egress"
  description              = "TCP to Private ALB"
  from_port                = 0
  to_port                  = 0
  protocol                 = "-1"
  security_group_id        = aws_security_group.private_ec2_sg[0].id
  source_security_group_id = aws_security_group.private_alb_sg[0].id
}

resource "aws_security_group_rule" "ec2_to_rds_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "egress"
  description              = "TCP to RDS"
  from_port                = 0
  to_port                  = 0
  protocol                 = "-1"
  security_group_id        = aws_security_group.private_ec2_sg[0].id
  source_security_group_id = aws_security_group.rds_sg[0].id
}

# RULES
# ////////////////////////////////////////////////////
# PRIVATE CLUSTER SG
# ////////////////////////////////////////////////////
resource "aws_security_group" "private_cluster_sg" {
  count       = var.sg_flag ? 1 : 0
  name        = "private-cluster-sg"
  description = "Private K8 Cluster security group"
  vpc_id      = var.sg_vpc_id

  tags = {
    Name = "private_cluster_sg"
  }
}

# RULES
resource "aws_security_group_rule" "private_alb_to_cluster_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "ingress"
  description              = "TCP from Private ALB"
  from_port                = 0
  to_port                  = 0
  protocol                 = "tcp"
  security_group_id        = aws_security_group.private_cluster_sg[0].id
  source_security_group_id = aws_security_group.private_alb_sg[0].id
}

resource "aws_security_group_rule" "rds_to_cluster_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "ingress"
  description              = "TCP from Private RDS"
  from_port                = 0
  to_port                  = 0
  protocol                 = "tcp"
  security_group_id        = aws_security_group.private_cluster_sg[0].id
  source_security_group_id = aws_security_group.rds_sg[0].id
}

resource "aws_security_group_rule" "cluster_to_private_alb_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "egress"
  description              = "TCP to Private ALB"
  from_port                = 0
  to_port                  = 0
  protocol                 = "-1"
  security_group_id        = aws_security_group.private_cluster_sg[0].id
  source_security_group_id = aws_security_group.private_alb_sg[0].id
}

resource "aws_security_group_rule" "cluster_to_rds_tcp_sg_rule" {
  count                    = var.sg_flag && var.alb_flag ? 1 : 0
  type                     = "egress"
  description              = "TCP to RDS"
  from_port                = 0
  to_port                  = 0
  protocol                 = "-1"
  security_group_id        = aws_security_group.private_cluster_sg[0].id
  source_security_group_id = aws_security_group.rds_sg[0].id
}
